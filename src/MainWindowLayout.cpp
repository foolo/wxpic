// -*- C++ -*-
//
// generated by wxGlade
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include <wx/wx.h>
#include "MainWindowLayout.h"

// begin wxGlade: ::extracode
// end wxGlade


MainWindowLayout::MainWindowLayout(wxWindow* parent, wxWindowID id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
				wxFrame(parent, id, title, pos, size, wxDEFAULT_FRAME_STYLE)
{
				// begin wxGlade: MainWindowLayout::MainWindowLayout
				SetSize(wxSize(561, 404));
				SetTitle(wxT("frame"));
				mainWindow0_menubar = new wxMenuBar();
				wxMenu *wxglade_tmp_menu;
				wxglade_tmp_menu = new wxMenu();
				menu_item_new = wxglade_tmp_menu->Append(wxID_ANY, wxT("New\tCtrl+N"), wxEmptyString);
				menu_item_open = wxglade_tmp_menu->Append(wxID_ANY, wxT("Open\tCtrl+O"), wxEmptyString);
				menu_item_save = wxglade_tmp_menu->Append(wxID_ANY, wxT("Save\tCtrl+S"), wxEmptyString);
				menu_item_save_as = wxglade_tmp_menu->Append(wxID_ANY, wxT("Save as â€¦\tCtrl+Shift+S"), wxEmptyString);
				menu_item_exit = wxglade_tmp_menu->Append(wxID_ANY, wxT("Exit\tCtrl+Q"), wxEmptyString);
				mainWindow0_menubar->Append(wxglade_tmp_menu, wxT("File"));
				wxglade_tmp_menu = new wxMenu();
				menu_item_undo = wxglade_tmp_menu->Append(wxID_ANY, wxT("Undo\tCtrl+Z"), wxEmptyString);
				menu_item_redo = wxglade_tmp_menu->Append(wxID_ANY, wxT("Redo\tCtrl+Y"), wxEmptyString);
				mainWindow0_menubar->Append(wxglade_tmp_menu, wxT("Edit"));
				SetMenuBar(mainWindow0_menubar);
				toolbar = new wxToolBar(this, -1);
				SetToolBar(toolbar);
				toolbar->Realize();
				wxBoxSizer* sizer_1 = new wxBoxSizer(wxHORIZONTAL);
				wxBoxSizer* sizer_2 = new wxBoxSizer(wxVERTICAL);
				sizer_1->Add(sizer_2, 0, wxALL|wxEXPAND, 0);
				button_3 = new wxButton(this, wxID_ANY, wxT("button_3"));
				sizer_2->Add(button_3, 0, 0, 0);
				button_4 = new wxButton(this, wxID_ANY, wxT("button_4"));
				sizer_2->Add(button_4, 0, 0, 0);
				button_5 = new wxButton(this, wxID_ANY, wxT("button_5"));
				sizer_2->Add(button_5, 0, 0, 0);
				button_6 = new wxButton(this, wxID_ANY, wxT("button_6"));
				sizer_2->Add(button_6, 0, 0, 0);
				color_button = new wxButton(this, wxID_ANY, wxEmptyString);
				color_button->SetMinSize(wxSize(32, 32));
				color_button->SetToolTip(wxT("Active color"));
				sizer_2->Add(color_button, 0, wxALL, 5);
				const wxString brush_size_choice_choices[] = {};
				brush_size_choice = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, brush_size_choice_choices);
				brush_size_choice->SetToolTip(wxT("Brush size"));
				sizer_2->Add(brush_size_choice, 0, 0, 0);
				panel_1 = new wxScrolledWindow(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL);
				panel_1->SetScrollRate(1, 1);
				sizer_1->Add(panel_1, 1, wxEXPAND, 0);
				wxBoxSizer* sizer_3 = new wxBoxSizer(wxHORIZONTAL);
				imagePanel = new ImagePanel(panel_1);
				sizer_3->Add(imagePanel, 1, wxEXPAND, 0);
				
				panel_1->SetSizer(sizer_3);
				SetSizer(sizer_1);
				Layout();
				// end wxGlade
}

